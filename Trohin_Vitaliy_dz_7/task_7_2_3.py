"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.
Решите задачу тремя способами:
3) с помощью встроенной функции поиска медианы
сделайте замеры на массивах длиной 10, 100, 1000 элементов
В конце сделайте аналитику какой трех из способов оказался эффективнее
"""

from random import random
from statistics import median
from timeit import timeit

m_1 = 10
m_2 = 100
m_3 = 1000
list_1 = list(round(random() * 100) for i in range(2 * m_1 + 1))
list_2 = list(round(random() * 100) for j in range(2 * m_2 + 1))
list_3 = list(round(random() * 100) for k in range(2 * m_3 + 1))

print(int(median(list_1)), timeit('median(list_1)', globals=globals(), number=100))
print(int(median(list_2)), timeit('median(list_2)', globals=globals(), number=100))
print(int(median(list_3)), timeit('median(list_3)', globals=globals(), number=100))

"""
1) Метод Гномья
63 0.004650699999729113
50 0.09902510000028997
48 0.041541200000210665

2) Без сортировки
38 0.0010290999998687766
46 0.06013769999935903
50 4.629787900000338

3) Функция median
57 0.005645500000355241
48 0.00784139999996114
51 0.03022499999951833

Быстрее работает встроенная функция median, на второе место по скорости можно поставить 
метод сортировки Гномья и проигрывает метод без сортировки.
"""
